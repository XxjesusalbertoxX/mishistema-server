name: deploy to ubuntu

on:
  workflow_dispatch:

jobs:
  update-env:
    runs-on: ubuntu-latest
    environment: mishistema-production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update .env files on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 2222
          script: |
            set -e  # Detener si hay error
            sudo git config --global user.name "XxjesusalbertoxX"
            sudo git config --global user.email "villarrealperezjesusalberto@gmail.com"

            echo "ðŸ“¦ Clonando el repositorio mishistema-server..."
            sudo git clone https://github.com/XxjesusalbertoxX/mishistema-server.git
            sudo chown -R $USER:$USER $HOME/mishistema-server
            # API Gateway
            if [ -d "$HOME/mishistema-server/infraestructure/api-gateway/" ]; then
              cd $HOME/mishistema-server/infraestructure/api-gateway/
              npm i
              cat <<EOF > .env
            APIGATEWAY_PORT=${{ vars.APIGATEWAY_PORT }}
            LOGIN_SERVICE="http://login:${{ vars.LOGIN_PORT }}"
            EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            fi
              
            # WebSocket
            if [ -d "$HOME/mishistema-server/infraestructure/web-socket-traductor/" ]; then
              cd $HOME/mishistema-server/infraestructure/web-socket-traductor/
              npm i
              cat <<EOF > .env
            MQTT_BROKER=mqtt://${{ vars.EC2_HOST }}:${{ vars.EMQX_MQTT_PORT }}
            WS_PORT=${{ vars.WS_PORT }}
            MQTT_USERNAME=${{ secrets.MQTT_USERNAME }}
            MQTT_PASSWORD=${{ secrets.MQTT_PASSWORD }}
            EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            fi
              
            # Devices
            if [ -d "$HOME/devices/" ]; then
              cd $HOME/devices/
              sudo npm i
              cat <<EOF > .env
            API_PORT=${{ vars.DEVICES_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DATABASE_URL=postgres://${{ secrets.DB_MISHISTEMA_USER }}:${{ secrets.DB_MISHISTEMA_PASSWORD }}@${{ vars.EC2_HOST }}:${{ vars.DB_MISHISTEMA_PORT }}/${{ secrets.DB_MISHISTEMA_NAME }}
            EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            fi
              
            # Login
            if [ -d "$HOME/login/" ]; then
              cd $HOME/login/
              sudo npm i
              cat <<EOF > .env
            API_PORT=${{ vars.LOGIN_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DATABASE_URL=postgres://${{ secrets.DB_MISHISTEMA_USER }}:${{ secrets.DB_MISHISTEMA_PASSWORD }}@${{ vars.EC2_HOST }}:${{ vars.DB_MISHISTEMA_PORT }}/${{ secrets.DB_MISHISTEMA_NAME }}
            EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            fi
              
            # Docker Infraestructure
            if [ -d "$HOME/mishistema-server/DOCKER/infraestructure/" ]; then
              cd $HOME/mishistema-server/DOCKER/infraestructure/
              cat <<EOF > .env
            EMQX_MQTT_PORT=${{ vars.EMQX_MQTT_PORT }}
            EMQX_MQTT_WEBSOCKET_PORT=${{ vars.EMQX_MQTT_WEBSOCKET_PORT }}
            EMQX_API_REST=${{ vars.EMQX_API_REST }}
            EMQX_DASHBOARD_PORT=${{ vars.EMQX_DASHBOARD_PORT }}
            EMQX_NODE_COOKIE=${{ secrets.EMQX_NODE_COOKIE }}
            RABBITMQ_ERLANG_COOKIE=${{ secrets.RABBITMQ_ERLANG_COOKIE }}
            RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
            RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}
            DB_MISHISTEMA_USER=${{ secrets.DB_MISHISTEMA_USER }}
            DB_MISHISTEMA_PASSWORD=${{ secrets.DB_MISHISTEMA_PASSWORD }}
            DB_MISHISTEMA_NAME=${{ secrets.DB_MISHISTEMA_NAME }}
            DB_MISHISTEMA_PORT=${{ vars.DB_MISHISTEMA_PORT }}
            RABBITMQ_DASHBOARD_PORT=${{ vars.RABBITMQ_DASHBOARD_PORT }}
            RABBITMQ_AMQP_PORT=${{ vars.RABBITMQ_AMQP_PORT }}
            EOF
              sudo chmod 600 .env
              cd -
              
              # Docker Compose
              cd $HOME/mishistema-server/DOCKER/infraestructure/
              sudo docker-compose pull
              sudo docker-compose up -d --remove-orphans
            fi
