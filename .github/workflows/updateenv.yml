name: Update .env files on EC2

on:
  workflow_dispatch:

jobs:
  update-env:
    runs-on: ubuntu-latest
    environment: mishistema-production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update .env files on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 2222
          script: |
            set -e  # Detener si hay error

            # API Gateway
            echo "üîÑ Actualizando archivo .env de API Gateway..."
            if [ -d "~/mishistema-server/infraestructure/api-gateway/" ]; then
              cd ~/mishistema-server/infraestructure/api-gateway/
              npm i
              cat <<EOF > .env
              APIGATEWAY_PORT=${{ vars.APIGATEWAY_PORT }}
              LOGIN_SERVICE="http://login:${{ vars.LOGIN_PORT }}"
              EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            else
              echo "‚ùå No se encontr√≥ la carpeta api-gateway. Abortando..."
              exit 1
            fi

            # Web-socket
            echo "üîÑ Actualizando archivo .env de API Gateway..."
            if [ -d "~/mishistema-server/infraestructure/web-socket-traductor/" ]; then
              cd ~/mishistema-server/infraestructure/web-socket-traductor/
              npm i
              cat <<EOF > .env
              MQTT_BROKER=mqtt://${{vars.EC2_HOST}}:${{vars.EMQX_MQTT_PORT}}
              WS_PORT=${{vars.WS_PORT}}
              MQTT_USERNAME=${{ secrets.MQTT_USERNAME }}
              MQTT_PASSWORD=${{ secrets.MQTT_PASSWORD }}
              EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            else
              echo "‚ùå No se encontr√≥ la carpeta api-gateway. Abortando..."
              exit 1
            fi

            # Devices
            echo "üîÑ Actualizando archivo .env de Devices..."
            if [ -d "~/devices/" ]; then
              cd ~/devices/
              sudo npm i
              cat <<EOF > .env
              API_PORT=${{ vars.DEVICES_PORT }}
              JWT_SECRET=${{ secrets.JWT_SECRET }}
              DATABASE_URL=postgres://${{ secrets.DB_MISHISTEMA_USER }}:${{ secrets.DB_MISHISTEMA_PASSWORD }}@${{ vars.EC2_HOST }}:${{ vars.DB_MISHISTEMA_PORT }}/${{ secrets.DB_MISHISTEMA_NAME }}

              EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            else
              echo "‚ùå No se encontr√≥ la carpeta devices. Abortando..."
              exit 1
            fi

            # Devices
            echo "üîÑ Actualizando archivo .env de Devices..."
            if [ -d "~/places/" ]; then
              cd ~/devices/
              sudo npm i
              cat <<EOF > .env
              API_PORT=${{ vars.PLACES_PORT }}
              DATABASE_URL=postgres://${{ secrets.DB_MISHISTEMA_USER }}:${{ secrets.DB_MISHISTEMA_PASSWORD }}@${{ vars.EC2_HOST }}:${{ vars.DB_MISHISTEMA_PORT }}/${{ secrets.DB_MISHISTEMA_NAME }}

              EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            else
              echo "‚ùå No se encontr√≥ la carpeta devices. Abortando..."
              exit 1
            fi

            # Login
            echo "üîÑ Actualizando archivo .env de Login..."
            if [ -d "~/login/" ]; then
              cd ~/login/
              sudo npm i
              cat <<EOF > .env
              API_PORT=${{ vars.LOGIN_PORT }}
              JWT_SECRET=${{ secrets.JWT_SECRET }}
              DATABASE_URL=postgres://${{ secrets.DB_MISHISTEMA_USER }}:${{ secrets.DB_MISHISTEMA_PASSWORD }}@${{ vars.EC2_HOST }}:${{ vars.DB_MISHISTEMA_PORT }}/${{ secrets.DB_MISHISTEMA_NAME }}
              EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            else
              echo "‚ùå No se encontr√≥ la carpeta login. Abortando..."
              exit 1
            fi

            # Docker Infraestructure
            echo "‚úÖ Actualizando archivo .env en DOCKER/infraestructure..."
            if [ -d "~/mishistema-server/DOCKER/infraestructure/" ]; then
              cd ~/mishistema-server/DOCKER/infraestructure/
              cat <<EOF > .env
              EMQX_MQTT_PORT=${{ vars.EMQX_MQTT_PORT }}
              EMQX_MQTT_WEBSOCKET_PORT=${{ vars.EMQX_MQTT_WEBSOCKET_PORT }}
              EMQX_API_REST=${{ vars.EMQX_API_REST }}
              EMQX_DASHBOARD_PORT=${{ vars.EMQX_DASHBOARD_PORT }}
              EMQX_NODE_COOKIE=${{ secrets.EMQX_NODE_COOKIE }}
              RABBITMQ_ERLANG_COOKIE=${{ secrets.RABBITMQ_ERLANG_COOKIE }}
              RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
              RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}
              DB_MISHISTEMA_USER=${{ secrets.DB_MISHISTEMA_USER }}
              DB_MISHISTEMA_PASSWORD=${{ secrets.DB_MISHISTEMA_PASSWORD }}
              DB_MISHISTEMA_NAME=${{ secrets.DB_MISHISTEMA_NAME }}
              DB_MISHISTEMA_PORT=${{ vars.DB_MISHISTEMA_PORT }}
              RABBITMQ_DASHBOARD_PORT=${{ vars.RABBITMQ_DASHBOARD_PORT }}
              RABBITMQ_AMQP_PORT=${{ vars.RABBITMQ_AMQP_PORT }}
              EOF
              sudo chown $USER:$USER .env
              sudo chmod 600 .env
              cd -
            else
              echo "‚ùå No se encontr√≥ la carpeta DOCKER/infraestructure. Abortando..."
              exit 1
            fi

            # Reiniciar Docker si hay cambios
            echo "üöÄ Verificando estado de Docker..."
            if sudo docker-compose ps | grep "Up"; then
              echo "‚ö°Ô∏è Servicios corriendo, aplicando cambios..."
              sudo docker-compose up --build -d --remove-orphans
            else
              echo "üöÄ Iniciando Docker por primera vez..."
              sudo docker-compose up -d
            fi

            echo "‚úÖ ¬°Archivos .env actualizados correctamente! üéâ"