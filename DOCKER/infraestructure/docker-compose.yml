services:
  # Broker EMQX
  emqx:
    image: emqx:5.8.5
    container_name: emqx
    restart: unless-stopped
    environment:
      - "EMQX_AUTH_USER1_ACL=all"
    volumes:
      - emqx_data:/opt/emqx/data
      - emqx_etc:/opt/emqx/etc
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    ports:
      - ${EMQX_MQTT_PORT}:1883
      - ${EMQX_MQTT_WEBSOCKET_PORT}:8083
      - ${EMQX_DASHBOARD_PORT}:18083
    networks:
      - mishistema

  # Broker AMQP (RabbitMQ) para comunicaci√≥n interna
  rabbit_amqp:
    image: rabbitmq:3-management
    container_name: AMQP
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    ports:
      - "${RABBITMQ_AMQP_PORT}:5672"
      - "${RABBITMQ_DASHBOARD_PORT}:15672"
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbit_amqp_data:/var/lib/rabbitmq
    networks:
      - mishistema

  # Base de datos
  db_mishistema:
    image: postgres:17
    container_name: DBMISHISTEMA
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_MISHISTEMA_USER}
      - POSTGRES_PASSWORD=${DB_MISHISTEMA_PASSWORD}
      - POSTGRES_DB=${DB_MISHISTEMA_NAME}
    ports:
      - "${DB_MISHISTEMA_PORT}:5432"
    volumes:
      - db_mishistema:/var/lib/postgresql/data
    networks:
      - mishistema

  # API Gateway
  apigateway:
    build: ../../infraestructure/api-gateway
    container_name: API_GATEWAY
    restart: unless-stopped
    env_file:
      - ../../infraestructure/apigateway/.env
    ports:
      - "${APIGATEWAY_PORT}:8080"
    volumes:
      - ../../infraestructure/api-gateway:/app
    depends_on:
      - emqx
      - rabbit_amqp
      - db_mishistema
    networks:
      - mishistema

  # Websocket
  websocket:
    build: ../../infraestructure/web-socket-traductor
    container_name: WEBSOCKET_PROXY
    restart: unless-stopped
    env_file:
      - ../../infraestructure/web-socket-traductor/.env
    ports:
      - "${WS_PORT}:8888"
    volumes:
      - ../../infraestructure/web-socket-traductor:/app
      - ../../infraestructure/web-socket-traductor/.env:/app/.env  # Montaje del archivo .env
    depends_on:
      - emqx
      - rabbit_amqp
      - db_mishistema
      - apigateway
    networks:
      - mishistema

  # Servicio Login
  login:
    build: ../../services/login
    container_name: LOGIN_SERVICE
    ports:
      - "${LOGIN_PORT}:3000"
    env_file:
      - ../../services/login/.env 
    volumes:
      - ../../services/login:/app
      - ../../services/database:/app/database
      - ../../services/login/.env:/app/.env  # Montaje del archivo .env
    restart: unless-stopped
    depends_on:
      - emqx
      - rabbit_amqp
      - db_mishistema
      - apigateway
    networks:
      - mishistema

  # Servicio Devices
  devices:
    build: ../../services/devices
    container_name: DEVICES_SERVICE
    ports:
      - "${DEVICES_PORT}:3001"
    env_file:
      - ../../services/devices/.env 
    volumes:
      - ../../services/devices:/app
      - ../../services/database:/app/database  # Monta la carpeta local 'database' a '/app/database'
      - ../../services/devices/.env:/app/.env  # Montaje del archivo .env
    restart: unless-stopped
    depends_on:
      - emqx
      - rabbit_amqp
      - db_mishistema
      - apigateway
    networks:
      - mishistema

  # Servicio Places
  places:
    build: ../../services/places
    container_name: PLACES_SERVICE
    ports:
      - "${PLACES_PORT}:3002"
    env_file:
      - ../../services/devices/.env 
    volumes:
      - ../../services/places:/app
      - ../../services/database:/app/database
      - ../../services/places/.env:/app/.env  # Montaje del archivo .env
    restart: unless-stopped
    depends_on:
      - emqx
      - rabbit_amqp
      - db_mishistema
      - apigateway
    networks:
      - mishistema

networks:
  mishistema:
    driver: bridge

volumes:
  emqx_data:
    name: emqx_data
  emqx_etc:
    name: emqx_etc
  rabbit_amqp_data:
    name: rabbit_amqp_data
  db_mishistema:
    name: db_mishistema
